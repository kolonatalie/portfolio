let posts=[],currentIndex=0;const batchSize=3;async function loadAndRenderInitialPosts(){try{const t=await fetch("../content/data/posts.json");posts=await t.json(),await renderPosts();window.location.hash&&await handleHashNavigation()}catch(t){showToast("Failed to load posts. Please try again")}}async function getFileDate(t){try{const e=(await fetch(t,{method:"HEAD"})).headers.get("Last-Modified");if(e)return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}catch(t){}return(new Date).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}function createReactionButtonHTML(t,e,n){const o=getLikes(t,e);return`\n    <button class="like-btn${n===e?" reacted":""}" data-id="${t}" data-reaction="${e}">\n      ${e} <span class="reaction-count ${o>0?"":"hidden"}">${o}</span>\n    </button>\n  `}async function renderPosts(){const t=document.getElementById("feed"),e=document.getElementById("loading");e&&e.classList.remove("is-hidden");const n=posts.slice(currentIndex,currentIndex+3);try{const o=n.map((t=>fetch(t.file).then((t=>t.text())))),a=await Promise.all(o);for(let e=0;e<n.length;e++){const o=n[e],s=a[e],i=marked.parse(s),c=getSavedReaction(o.id),r=window.location.origin+window.location.pathname+`#post-${o.id}`,l=await getFileDate(o.file),d=document.createElement("article");d.classList.add("post"),d.innerHTML=`\n        <h2 id="post-${o.id}">${o.title}</h2>\n        <div class="content">${i}</div>\n        <div class="post-footer">\n          <div class="reaction-buttons">\n            ${createReactionButtonHTML(o.id,"üëç",c)}\n            ${createReactionButtonHTML(o.id,"‚ù§Ô∏è",c)}\n            ${createReactionButtonHTML(o.id,"üî•",c)}\n          </div>\n          <p class="meta">üëÅÔ∏è  ${o.views} ‚Ä¢ ${l}</p>\n          <a href="#post-${o.id}" class="share-link" data-id="${o.id}" aria-label="Share this post"></a>\n        </div>\n        <input type="text" class="manual-copy-input" id="shareUrlInput-${o.id}" readonly value="${r}" aria-label="Shareable URL for this post">\n      `,t.appendChild(d)}}catch(t){showToast("Failed to load the post. Please try again")}finally{currentIndex+=3,e&&e.parentNode&&e.parentNode.removeChild(e)}}let isFetching=!1;function getLikes(t,e){return parseInt(localStorage.getItem(`likes-${t}-${e}`))||0}function addLike(t,e,n){if(e){let n=getLikes(t,e);n>0&&localStorage.setItem(`likes-${t}-${e}`,String(n-1))}let o=getLikes(t,n);localStorage.setItem(`likes-${t}-${n}`,String(o+1))}function getSavedReaction(t){return localStorage.getItem(`reacted-on-post-${t}`)}function saveReaction(t,e){localStorage.setItem(`reacted-on-post-${t}`,e)}function showToast(t){let e=document.querySelector(".toast");e||(e=document.createElement("div"),e.className="toast",document.body.appendChild(e)),e.textContent=t,e.classList.add("show"),setTimeout((()=>{e.classList.remove("show")}),2500)}function showNotFoundToast(){let t=document.querySelector(".notFound-toast");t||(t=document.createElement("div"),t.className="notFound-toast",document.body.appendChild(t)),t.innerHTML='\n    <div>\n      <h2>404</h2>\n      <p>Oops! The post you‚Äôre looking for doesn‚Äôt exist.</p>\n      <button class="btn-home"><a href="../blog/">Take me Home</a></button>\n    </div>\n  ',t.classList.add("show"),setTimeout((()=>{t.classList.remove("show")}),5e3)}async function handleHashNavigation(){const t=window.location.hash;if(!t)return;const e=t.replace("#post-","");let n=document.querySelector(t);if(!n){const o=posts.findIndex((t=>t.id==e));if(-1===o)return void showNotFoundToast();for(;currentIndex<=o&&(await renderPosts(),n=document.querySelector(t),!n););}if(n){const t=.2*window.innerHeight,e=n.getBoundingClientRect().top+window.scrollY-t;window.scrollTo({top:e,behavior:"smooth"});const o=n.closest(".post");o&&function(t){new IntersectionObserver(((t,e)=>{t.forEach((t=>{t.isIntersecting&&(t.target.classList.add("highlight"),setTimeout((()=>{t.target.classList.remove("highlight")}),2500),e.disconnect())}))}),{root:null,threshold:.5}).observe(t)}(o)}}window.addEventListener("scroll",(()=>{isFetching||currentIndex>=posts.length||window.innerHeight+window.scrollY>=document.body.offsetHeight-200&&(isFetching=!0,renderPosts().finally((()=>{isFetching=!1})))})),document.addEventListener("click",(async t=>{if(t.target.classList.contains("like-btn")){const e=t.target.dataset.id,n=t.target.dataset.reaction,o=getSavedReaction(e),a=t.target.closest(".post").querySelectorAll(".like-btn");if(a.forEach((t=>t.classList.remove("reacted"))),o===n){localStorage.removeItem(`reacted-on-post-${e}`);let t=getLikes(e,o);t>0&&localStorage.setItem(`likes-${e}-${o}`,String(t-1))}else t.target.classList.add("reacted"),addLike(e,o,n),saveReaction(e,n);a.forEach((t=>{const n=t.dataset.reaction,o=t.querySelector(".reaction-count"),a=getLikes(e,n);o.textContent=a,o.style.display=0===a?"none":"inline"}))}if(t.target.classList.contains("share-link")){t.preventDefault();const e=t.target.dataset.id,n=window.location.origin+window.location.pathname+`#post-${e}`,o=t.target.closest(".post").querySelector("h2").textContent,a=!/Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent),s=navigator.userAgent.includes("Macintosh")&&navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome");if(!navigator.share||a||s)try{await navigator.clipboard.writeText(n),showToast("Link copied to clipboard")}catch(e){showToast("Oops! Link didn‚Äôt copy, please copy it yourself.");const n=t.target.closest(".post").querySelector(".manual-copy-input");n&&(n.style.position="static",n.style.opacity="1",n.focus(),n.select(),setTimeout((()=>{n.style.position="absolute",n.style.opacity="0"}),1e4))}else try{await navigator.share({title:o,text:"Share this post",url:n})}catch(t){showToast("Couldn‚Äôt share. Please try again.")}}})),loadAndRenderInitialPosts(),window.addEventListener("hashchange",handleHashNavigation);